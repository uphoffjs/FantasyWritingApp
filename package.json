{
  "name": "FantasyWritingApp",
  "version": "0.0.1",
  "private": true,
  "scripts": {
    "vite:dev": "vite --port 3002",
    "vite:build": "vite build",
    "vite:preview": "vite preview --port 3002",
    "vite:analyze": "vite-bundle-visualizer",
    "build": "vite build --config vite.config.prod.ts",
    "build:analyze": "vite build --config vite.config.prod.ts && open dist/stats.html",
    "preview": "vite preview --port 3002",
    "webpack:dev": "webpack serve --mode development --open",
    "webpack:build": "WEBPACK=true webpack --config webpack.prod.js",
    "dev": "vite --port 3002",
    "dev:webpack": "webpack serve --mode development --open",
    "dev:port": "WEBPACK=true node scripts/start-dev.js",
    "dev:3000": "vite --port 3000",
    "dev:5000": "vite --port 5000",
    "dev:8000": "vite --port 8000",
    "dev:8080": "vite --port 8080",
    "android": "react-native run-android",
    "ios": "react-native run-ios",
    "lint": "eslint .",
    "lint:cypress": "eslint 'cypress/**/*.cy.{js,jsx,ts,tsx}' --config .eslintrc.cypress.js",
    "lint:cypress:fix": "eslint 'cypress/**/*.cy.{js,jsx,ts,tsx}' --config .eslintrc.cypress.js --fix",
    "start": "vite --port 3002",
    "test": "jest",
    "test:unit": "jest --testPathPattern=__tests__",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:debug": "node --inspect-brk ./node_modules/.bin/jest --runInBand",
    "web": "vite --port 3002",
    "web:webpack": "webpack serve --mode development --open",
    "build:web": "vite build --config vite.config.prod.ts",
    "build:webpack": "WEBPACK=true webpack --config webpack.prod.js",
    "build:webpack:analyze": "WEBPACK=true ANALYZE=true webpack --config webpack.prod.js",
    "serve:prod": "npx serve -s dist -l 3000",
    "lighthouse": "lighthouse http://localhost:3000 --output html --output-path ./lighthouse-report.html",
    "audit": "npm run build:web && npm run serve:prod & sleep 5 && npm run lighthouse",
    "db:push": "node scripts/push-schema.js",
    "db:migrate": "node scripts/migrate-supabase.js",
    "supabase:push": "node scripts/push-schema.js",
    "pre-test:cleanup": "lsof -ti :3003 | xargs kill -9 2>/dev/null || true && lsof -ti :3002 | xargs kill -9 2>/dev/null || true && pkill -f webpack || true && pkill -f 'react-scripts' || true && pkill -f 'Google Chrome' || true && sleep 2",
    "chrome:reset": "bash scripts/reset-chrome-cypress.sh",
    "test:fix": "npm run chrome:reset && npm run test:component",
    "cypress:open": "npm run pre-test:cleanup && cypress open --browser electron",
    "cypress:run": "npm run pre-test:cleanup && cypress run --browser electron --headless",
    "test:e2e": "npm run pre-test:cleanup && start-server-and-test web http://localhost:3002 'cypress run --browser electron --headless'",
    "test:e2e:open": "npm run pre-test:cleanup && start-server-and-test web http://localhost:3002 'cypress open --browser electron'",
    "test:component": "npm run pre-test:cleanup && cypress run --component --browser electron --headless",
    "test:component:open": "npm run pre-test:cleanup && cypress open --component --browser electron",
    "detox:build:ios": "detox build -c ios.sim.debug",
    "detox:build:android": "detox build -c android.emu.debug",
    "detox:test:ios": "detox test -c ios.sim.debug",
    "detox:test:android": "detox test -c android.emu.debug",
    "detox:test:ios:release": "detox build -c ios.sim.release && detox test -c ios.sim.release",
    "detox:test:android:release": "detox build -c android.emu.release && detox test -c android.emu.release",
    "detox:clean": "detox clean-framework-cache && detox build-framework-cache",
    "e2e:ios": "npm run detox:build:ios && npm run detox:test:ios",
    "e2e:android": "npm run detox:build:android && npm run detox:test:android",
    "e2e:all": "npm run e2e:ios && npm run e2e:android",
    "test:component:chrome": "npm run pre-test:cleanup && cypress run --component --browser chrome --headless",
    "test:component:vite": "cypress run --component --browser electron --config-file cypress.config.ts",
    "test:component:vite:open": "cypress open --component --config-file cypress.config.ts",
    "test:component:webpack": "npm run pre-test:cleanup && cypress run --component --browser electron --headless",
    "test:component:parallel": "npm run pre-test:cleanup && cypress run --component --browser electron --headless --record --parallel",
    "test:e2e:parallel": "npm run pre-test:cleanup && start-server-and-test web http://localhost:3002 'cypress run --browser electron --headless --record --parallel'",
    "test:all": "npm run pre-test:cleanup && npm run test:component && npm run test:e2e",
    "test:all:parallel": "npm run pre-test:cleanup && npm run test:component:parallel && npm run test:e2e:parallel",
    "test:split:elements": "cypress run --component --browser electron --headless --spec 'cypress/component/elements/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:forms": "cypress run --component --browser electron --headless --spec 'cypress/component/forms/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:navigation": "cypress run --component --browser electron --headless --spec 'cypress/component/navigation/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:ui": "cypress run --component --browser electron --headless --spec 'cypress/component/ui/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:errors": "cypress run --component --browser electron --headless --spec 'cypress/component/errors/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:projects": "cypress run --component --browser electron --headless --spec 'cypress/component/projects/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:sync": "cypress run --component --browser electron --headless --spec 'cypress/component/sync/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:utilities": "cypress run --component --browser electron --headless --spec 'cypress/component/utilities/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:visualization": "cypress run --component --browser electron --headless --spec 'cypress/component/visualization/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:performance": "cypress run --component --browser electron --headless --spec 'cypress/component/performance/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:examples": "cypress run --component --browser electron --headless --spec 'cypress/component/examples/**/*.cy.{js,jsx,ts,tsx}'",
    "test:split:simple": "cypress run --component --browser electron --headless --spec 'cypress/component/SimpleTest.cy.tsx'",
    "test:fast": "npm run pre-test:cleanup && npm run test:split:simple",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "tokens:build": "node scripts/build-tokens.js",
    "tokens:watch": "nodemon scripts/build-tokens.js --watch src/design-tokens/",
    "sync-tokens": "node scripts/sync-tokens.js",
    "sync-tokens:watch": "node scripts/sync-tokens.js --watch",
    "optimize-assets": "node scripts/optimize-assets.js",
    "supabase": "node scripts/supabase-cli.js",
    "supabase:fix-rls": "node scripts/supabase-cli.js --file scripts/simple-fix-rls.sql",
    "supabase:interactive": "node scripts/supabase-cli.js --interactive",
    "prepare": "husky",
    "generate:factory": "node scripts/generate-factory.js"
  },
  "dependencies": {
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@react-native-picker/picker": "^2.11.2",
    "@react-native/new-app-screen": "0.81.4",
    "@react-navigation/bottom-tabs": "^6.6.1",
    "@react-navigation/drawer": "^6.7.2",
    "@react-navigation/native": "^6.1.18",
    "@react-navigation/native-stack": "^6.11.0",
    "@supabase/supabase-js": "^2.57.4",
    "@types/react-native-vector-icons": "^6.4.18",
    "@types/uuid": "^10.0.0",
    "babel-plugin-module-resolver": "^5.0.2",
    "dotenv-webpack": "^8.1.1",
    "fuse.js": "^7.1.0",
    "nativewind": "^2.0.11",
    "pg": "^8.16.3",
    "react": "19.1.0",
    "react-dom": "^19.1.0",
    "react-native": "0.81.4",
    "react-native-gesture-handler": "^2.28.0",
    "react-native-reanimated": "^4.1.0",
    "react-native-safe-area-context": "^5.6.1",
    "react-native-screens": "^4.16.0",
    "react-native-svg": "^15.13.0",
    "react-native-vector-icons": "^10.3.0",
    "react-native-web": "^0.21.1",
    "react-native-worklets": "^0.5.1",
    "uuid": "^13.0.0",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@babel/plugin-transform-class-properties": "^7.27.1",
    "@babel/plugin-transform-export-namespace-from": "^7.27.1",
    "@babel/plugin-transform-modules-commonjs": "^7.27.1",
    "@babel/plugin-transform-nullish-coalescing-operator": "^7.27.1",
    "@babel/plugin-transform-optional-chaining": "^7.27.1",
    "@babel/plugin-transform-private-methods": "^7.27.1",
    "@babel/plugin-transform-private-property-in-object": "^7.27.1",
    "@babel/plugin-transform-runtime": "^7.28.3",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@babel/runtime": "^7.28.4",
    "@cypress/code-coverage": "^3.14.6",
    "@cypress/react": "^9.0.1",
    "@cypress/vite-dev-server": "^6.0.3",
    "@cypress/webpack-dev-server": "^3.11.0",
    "@originjs/vite-plugin-commonjs": "^1.0.3",
    "@react-native-async-storage/async-storage": "^2.2.0",
    "@react-native-community/cli": "20.0.0",
    "@react-native-community/cli-platform-android": "20.0.0",
    "@react-native-community/cli-platform-ios": "20.0.0",
    "@react-native/babel-preset": "0.81.4",
    "@react-native/eslint-config": "0.81.4",
    "@react-native/metro-config": "0.81.4",
    "@react-native/typescript-config": "0.81.4",
    "@storybook/addon-a11y": "^9.1.7",
    "@storybook/addon-controls": "^9.0.8",
    "@storybook/addon-docs": "^9.1.7",
    "@storybook/addon-onboarding": "^9.1.7",
    "@storybook/addon-viewport": "^9.0.8",
    "@storybook/addon-webpack5-compiler-swc": "^4.0.1",
    "@storybook/react-webpack5": "^9.1.7",
    "@testing-library/jest-native": "^5.4.3",
    "@testing-library/react-native": "^12.3.0",
    "@types/detox": "^17.14.3",
    "@types/jest": "^29.5.13",
    "@types/node": "^24.5.2",
    "@types/react": "^19.1.0",
    "@types/react-test-renderer": "^19.1.0",
    "@types/sinon": "^17.0.4",
    "@vitejs/plugin-react": "^4.7.0",
    "autoprefixer": "^10.4.21",
    "axe-core": "^4.10.3",
    "babel-loader": "^9.2.1",
    "babel-plugin-istanbul": "^7.0.1",
    "babel-plugin-react-native-web": "^0.21.1",
    "clean-webpack-plugin": "^4.0.0",
    "compression-webpack-plugin": "^11.1.0",
    "copy-webpack-plugin": "^13.0.1",
    "css-loader": "^7.1.2",
    "css-minimizer-webpack-plugin": "^7.0.2",
    "cypress": "^14.5.4",
    "cypress-axe": "^1.7.0",
    "cypress-real-events": "^1.15.0",
    "detox": "^20.42.0",
    "dotenv": "^17.2.2",
    "eslint": "^8.19.0",
    "eslint-plugin-cypress": "^3.6.0",
    "eslint-plugin-storybook": "^9.1.7",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.6.4",
    "husky": "^9.1.7",
    "jest": "^29.6.3",
    "jest-circus": "^30.1.3",
    "lint-staged": "^16.2.1",
    "mini-css-extract-plugin": "^2.9.4",
    "nyc": "^17.1.0",
    "postcss": "^8.5.6",
    "postcss-loader": "^8.2.0",
    "postcss-preset-env": "^10.4.0",
    "prettier": "2.8.8",
    "process": "^0.11.10",
    "react-router-dom": "^7.9.1",
    "react-test-renderer": "19.1.0",
    "rollup-plugin-node-polyfills": "^0.2.1",
    "rollup-plugin-visualizer": "^6.0.3",
    "sinon": "^21.0.0",
    "start-server-and-test": "^2.1.1",
    "storybook": "^9.1.7",
    "storybook-dark-mode": "^4.0.2",
    "style-dictionary": "^4.4.0",
    "style-loader": "^4.0.0",
    "tailwindcss": "^3.4.17",
    "terser-webpack-plugin": "^5.3.14",
    "timers-browserify": "^2.0.12",
    "typescript": "^5.8.3",
    "vite": "^5.4.20",
    "vite-plugin-compression": "^0.5.1",
    "vite-plugin-pwa": "^1.0.3",
    "vite-plugin-react-native-web": "^2.2.1",
    "vite-plugin-svgr": "^4.5.0",
    "vite-tsconfig-paths": "^4.3.2",
    "webpack": "^5.101.3",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^6.0.1",
    "webpack-dev-server": "^5.2.2",
    "workbox-webpack-plugin": "^7.3.0"
  },
  "engines": {
    "node": ">=20"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix --max-warnings 0",
      "node scripts/check-imports.js"
    ],
    "cypress/**/*.cy.{ts,tsx}": [
      "node scripts/check-cypress-imports.js"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
}
